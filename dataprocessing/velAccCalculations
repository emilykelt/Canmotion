import math
import pandas as pd
import numpy as np

def calculate_velocity(accelerations):
    velocities = [0]  # Initial velocity is assumed to be 0
    for accel in accelerations:
        Velocity = velocities[-1] + accel
        velocities.append(Velocity)
    return velocities[1:]  # Exclude the initial velocity

def main():
    # Replace 'inputFile.csv' and 'outputFile.csv' with your actual file paths
    input_file_path = 'inputFile.csv'
    output_file_path = 'outputFile.csv'

    # Read accelerations from CSV
    df = pd.read_csv(input_file_path)
    accelerations = df['Acceleration'].tolist()

    # Calculate velocities
    velocities = calculate_velocity(accelerations)
    
    # Add a new 'velocity' column to the DataFrame with NaN values
    df['Velocity'] = [float('nan')] * len(df)
    
    # Fill the first row of the 'velocity' column with 0
    df.at[0, 'Velocity'] = 0

    # Fill the 'velocity' column with calculated velocities starting from the second row
    df['Velocity'] = [0] + velocities[:len(df)-1]

    # Write the updated DataFrame back to CSV
    df.to_csv(output_file_path, index=False)

if __name__ == "__main__":
    main()

def calculate_displacement(acceleration, velocity, time_interval, previous_displacement):
    # Displacement formula: displacement = previous_displacement + velocity * time_interval + 0.5 * acceleration * (time_interval ** 2)
    displacement = previous_displacement + velocity * time_interval + 0.5 * acceleration * (time_interval ** 2)
    return displacement

def add_displacement_column(input_csv, output_csv, time_interval):
    # Read the CSV file into a DataFrame
    df = pd.read_csv(input_csv)

    # Initialize the first displacement as the initial value in the 'Displacement' column
    df['Displacement'] = df['Velocity'] * time_interval + 0.5 * df['Acceleration'] * (time_interval ** 2)

    # Calculate and accumulate displacements based on 'Acceleration' and 'Velocity' columns
    for i in range(1, len(df)):
        df.loc[i, 'Displacement'] = calculate_displacement(df.loc[i, 'Acceleration'], df.loc[i, 'Velocity'], time_interval, df.loc[i - 1, 'Displacement'])

    # Save the DataFrame with the new 'Displacement' column to a new CSV file
    df.to_csv(output_csv, index=False)

# Example usage
input_csv_file = '.csv'  # Replace with actual input CSV file directory
output_csv_file = '.csv' # Replace with actual output CSV file directory
time_interval_seconds = 1  # Replace with the actual time interval in seconds

add_displacement_column(input_csv_file, output_csv_file, time_interval_seconds)
